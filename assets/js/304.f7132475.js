(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{740:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),e("h3",{attrs:{id:"iterator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iterator"}},[t._v("#")]),t._v(" Iterator")]),t._v(" "),e("p",[t._v("Iterator in python is an object that is used to iterate over iterable objects like lists, tuples, dicts and sets. Iterator object is initialised using the "),e("code",[t._v("iter()")]),t._v(" method. It uses the "),e("code",[t._v("next()")]),t._v(" method for iteration.")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("__iter(iterable)__")]),t._v(" method that is called for initialization of an iterator. This returns an iterator object")]),t._v(" "),e("li",[t._v("next ( "),e("code",[t._v("__next__")]),t._v(" in Python 3) The next method returns the next value for the iterable. When we use a for loop to traverse any iterable object, internally it uses the iter() method to get an iterator object which further uses next() method to iterate over. This method raises a "),e("code",[t._v("StopIteration")]),t._v(" to signal the end of the iteration.")])]),t._v(" "),e("h3",{attrs:{id:"yield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yield"}},[t._v("#")]),t._v(" Yield")]),t._v(" "),e("p",[e("strong",[t._v("Return")]),t._v(" sends a specified value back to its caller whereas "),e("strong",[t._v("Yield")]),t._v(" can produce a sequence of values. We should use yield when we want to iterate over a sequence, but don’t want to store the entire sequence in memory.")]),t._v(" "),e("p",[t._v("Yield are used in Python "),e("strong",[t._v("generators")]),t._v(". A generator function is defined like a normal function, but whenever it needs to generate a value, it does so with the "),e("code",[t._v("yield")]),t._v(" keyword rather than return. If the body of a def contains yield, the function automatically becomes a generator function.")]),t._v(" "),e("h3",{attrs:{id:"generator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" Generator")]),t._v(" "),e("h3",{attrs:{id:"generator-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator-function"}},[t._v("#")]),t._v(" Generator Function")]),t._v(" "),e("p",[t._v("A generator function is defined like a normal function, but whenever it needs to generate a value, it does so with the "),e("code",[t._v("yield")]),t._v(" keyword rather than "),e("code",[t._v("return")]),t._v(". If the body of a def contains yield, the function automatically becomes a generator function.")]),t._v(" "),e("h3",{attrs:{id:"generator-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator-object"}},[t._v("#")]),t._v(" Generator Object")]),t._v(" "),e("p",[t._v("A generator function returns a generator object. Generator objects are used either by calling the next method on the generator object or using the generator object in a “for in” loop (as shown in the above program).")]),t._v(" "),e("h3",{attrs:{id:"yield-from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yield-from"}},[t._v("#")]),t._v(" Yield From")]),t._v(" "),e("p",[e("code",[t._v("yield from")]),t._v(" establishes a "),e("strong",[t._v("transparent bidirectional")]),t._v(" connection between the caller and the sub-generator. More info in "),e("a",{attrs:{href:"https://stackoverflow.com/a/26109157/6421652",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"sieve-the-primes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sieve-the-primes"}},[t._v("#")]),t._v(" Sieve the Primes")]),t._v(" "),e("p",[t._v("Define the generator functions "),e("code",[t._v("nats")]),t._v(" and "),e("code",[t._v("sieve")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-py line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nats")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sieve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sieve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" s "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("Iterate and print the first 10 prime numbers.")]),t._v(" "),e("div",{staticClass:"language-py line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sieve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("Quadratic sieve ???")])])}),[],!1,null,null,null);e.default=n.exports}}]);