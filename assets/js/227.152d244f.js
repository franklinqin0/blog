(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{780:function(t,e,s){"use strict";s.r(e);var a=s(6),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("View")]),t._v(": rectangular area\n"),s("code",[t._v("var: body: some View")]),t._v(" has to be inside "),s("code",[t._v("View")])]),t._v(" "),s("p",[s("code",[t._v("some View")]),t._v(" gives more freedom: can be any "),s("code",[t._v("View")]),t._v(", rather than simply just "),s("code",[t._v("Text")])]),t._v(" "),s("p",[s("code",[t._v("stroke")]),t._v(" on "),s("code",[t._v("Shape")]),t._v(", draws the boundary")]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v("center?")]),t._v(" "),s("p",[t._v("if value not initialized, should specify type annotation\n"),s("code",[t._v("let")]),t._v(" constant\n"),s("code",[t._v("var")]),t._v(" variable")]),t._v(" "),s("p",[t._v("subclass initializer:")]),t._v(" "),s("ul",[s("li",[t._v("Setting the value of properties that the subclass declares.")]),t._v(" "),s("li",[t._v("Calling the superclass’s initializer.")]),t._v(" "),s("li",[t._v("Changing the value of properties defined by the superclass. Any additional setup work that uses methods, getters, or setters can also be done at this point.")])]),t._v(" "),s("p",[t._v("One of the most important differences between structures and classes is that structures are always copied when they’re passed around in your code, but classes are passed by reference.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Guten Tag!"')])]),t._v("\ngreeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// G")]),t._v("\ngreeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("before"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !")]),t._v("\ngreeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("after"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// u")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offsetBy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngreeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a")]),t._v("\n")])])]),s("p",[t._v("extended string delimiter")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" threeMoreDoubleQuotationMarks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('#"""\nHere are three more double quotes: """\n"""#')])]),t._v("\n")])])]),s("p",[t._v("the "),s("code",[t._v("~=")]),t._v(" operator compares two values of the same type using the == operator.")])])}),[],!1,null,null,null);e.default=n.exports}}]);